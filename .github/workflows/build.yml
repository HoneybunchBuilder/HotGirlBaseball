name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

jobs:

  build_pc:
    strategy:
      fail-fast: false

    name: Windows and Linux
    runs-on: [Windows, X64, self-hosted]
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true

    - name: Build & Cook Windows Development
      uses: OrchidIsle/UE5-Build-Project@latest
      with:
        RUNUAT_PATH: 'C:/Program Files/Epic Games/UE_5.5/Engine/Build/BatchFiles/RunUAT.bat'
        UPROJECT_PATH: ${{ github.workspace }}/HotGirlBaseBall.uproject
        BUILD_CONFIG: Development
        PLATFORM: Win64
        CLEAN: false
        COOK: true
        STAGE: false
        PACKAGE: false
        PAK: false
        SERVER: false
        ARCHIVE: false
        EDITOR: true
        ENCRYPT_INI: false

    - name: Build & Cook Linux Development
      uses: OrchidIsle/UE5-Build-Project@latest
      with:
        RUNUAT_PATH: 'C:/Program Files/Epic Games/UE_5.5/Engine/Build/BatchFiles/RunUAT.bat'
        UPROJECT_PATH: ${{ github.workspace }}/HotGirlBaseBall.uproject
        BUILD_CONFIG: Development
        PLATFORM: Linux
        CLEAN: false
        COOK: true
        STAGE: false
        PACKAGE: false
        PAK: false
        SERVER: false
        ARCHIVE: false
        EDITOR: false
        ENCRYPT_INI: false

    - name: Package Windows Development
      uses: OrchidIsle/UE5-Build-Project@latest
      with:
        RUNUAT_PATH: 'C:/Program Files/Epic Games/UE_5.5/Engine/Build/BatchFiles/RunUAT.bat'
        UPROJECT_PATH: ${{ github.workspace }}/HotGirlBaseBall.uproject
        BUILD_CONFIG: Development
        PLATFORM: Win64
        CLEAN: false
        COOK: true
        STAGE: true
        PACKAGE: true
        PAK: true
        SERVER: false
        ARCHIVE: true
        ARCHIVE_PATH: 'C:/HGBB/Win64Development'
        EDITOR: false
        ENCRYPT_INI: false

    - name: Package Linux Development
      uses: OrchidIsle/UE5-Build-Project@latest
      with:
        RUNUAT_PATH: 'C:/Program Files/Epic Games/UE_5.5/Engine/Build/BatchFiles/RunUAT.bat'
        UPROJECT_PATH: ${{ github.workspace }}/HotGirlBaseBall.uproject
        BUILD_CONFIG: Development
        PLATFORM: Linux
        CLEAN: false
        COOK: true
        STAGE: true
        PACKAGE: true
        PAK: true
        SERVER: false
        ARCHIVE: true
        ARCHIVE_PATH: 'C:/HGBB/LinuxDevelopment'
        EDITOR: false
        ENCRYPT_INI: false

    - name: Package Windows Shipping
      uses: OrchidIsle/UE5-Build-Project@latest
      with:
        RUNUAT_PATH: 'C:/Program Files/Epic Games/UE_5.5/Engine/Build/BatchFiles/RunUAT.bat'
        UPROJECT_PATH: ${{ github.workspace }}/HotGirlBaseBall.uproject
        BUILD_CONFIG: Shipping
        PLATFORM: Win64
        CLEAN: false
        COOK: true
        STAGE: true
        PACKAGE: true
        PAK: true
        SERVER: false
        ARCHIVE: true
        ARCHIVE_PATH: 'C:/HGBB/Win64Shipping'
        EDITOR: false
        ENCRYPT_INI: false

    - name: Package Linux Shipping
      uses: OrchidIsle/UE5-Build-Project@latest
      with:
        RUNUAT_PATH: 'C:/Program Files/Epic Games/UE_5.5/Engine/Build/BatchFiles/RunUAT.bat'
        UPROJECT_PATH: ${{ github.workspace }}/HotGirlBaseBall.uproject
        BUILD_CONFIG: Shipping
        PLATFORM: Linux
        CLEAN: false
        COOK: true
        STAGE: true
        PACKAGE: true
        PAK: true
        SERVER: false
        ARCHIVE: true
        ARCHIVE_PATH: 'C:/HGBB/LinuxShipping'
        EDITOR: false
        ENCRYPT_INI: false

    - name: Upload Windows Debug Symbols to BugSplat
      working-directory: C:\HGBB\Win64Shipping
      run: ${{ github.workspace }}/Plugins/BugSplat/Source/ThirdParty/SymUploader/symbol-upload-windows.exe -i ${{ secrets.BUGSPLAT_CLIENTID }} -s ${{ secrets.BUGSPLAT_CLIENTSECRET }} -b hotgirlbaseball -a HotGirlBaseball -v 0.1.0 -f "**/*.{pdb,exe,dll}"

    - name: Upload Linux Debug Symbols to BugSplat
      working-directory: C:\HGBB\LinuxShipping
      run: ${{ github.workspace }}/Plugins/BugSplat/Source/ThirdParty/SymUploader/symbol-upload-windows.exe -i ${{ secrets.BUGSPLAT_CLIENTID }} -s ${{ secrets.BUGSPLAT_CLIENTSECRET }} -b hotgirlbaseball -a HotGirlBaseball -v 0.1.0 -f "**/*.{so,debug,sym},**/HotGirlBaseball*"

    - name: Deploy Windows Development to Steam dev branch
      run: steamcmd +login ${{ secrets.STEAM_USERNAME }} +run_app_build ${{ github.workspace }}/Steam/WinDev.vdf +quit
    
    - name: Deploy Linux Development to Steam dev branch
      run: steamcmd +login ${{ secrets.STEAM_USERNAME }} +run_app_build ${{ github.workspace }}/Steam/LinDev.vdf +quit

    - name: Deploy Windows Shipping to Steam pre branch
      run: steamcmd +login ${{ secrets.STEAM_USERNAME }} +run_app_build ${{ github.workspace }}/Steam/WinPre.vdf +quit

    - name: Deploy Linux Shipping to Steam pre branch
      run: steamcmd +login ${{ secrets.STEAM_USERNAME }} +run_app_build ${{ github.workspace }}/Steam/LinPre.vdf +quit


  # Disabling apple build due to cook crash with mutable ; to be diagnosed
  #build_apple:
  #  name: Apple
  #  runs-on: [macOS, ARM64, self-hosted]
  #  steps:
  #  - uses: actions/checkout@v4
  #    with:
  #      lfs: true
  #  - name: Build & Cook macOS Development
  #    run: "'/Users/Shared/Epic Games/UE_5.5/Engine/Build/BatchFiles/RunUAT.sh' BuildCookRun -project='${{ github.workspace }}/HotGirlBaseBall.uproject' -clientconfig=Development -serverconfig=Development -platform=Mac -build -cook -noP4  -unattended -utf8output -prereqs -specifiedarchitecture=arm64+x86_64"
  #  - name: Package macOS Development
  #    run: "'/Users/Shared/Epic Games/UE_5.5/Engine/Build/BatchFiles/RunUAT.sh' BuildCookRun -project='${{ github.workspace }}/HotGirlBaseBall.uproject' -clientconfig=Development -serverconfig=Development -platform=Mac  -build -cook -package -pak -archive -archivedirectory='/Users/Shared/HGBB/MacDevelopment' -noP4 -unattended -utf8output -prereqs -specifiedarchitecture=arm64+x86_64"
  #  - name: Package macOS Shipping
  #    run: "'/Users/Shared/Epic Games/UE_5.5/Engine/Build/BatchFiles/RunUAT.sh' BuildCookRun -project='${{ github.workspace }}/HotGirlBaseBall.uproject' -clientconfig=Shipping -serverconfig=Shipping -platform=Mac  -build -cook -package -pak -archive -archivedirectory='/Users/Shared/HGBB/MacShipping' -noP4 -unattended -utf8output -prereqs -specifiedarchitecture=arm64+x86_64"
  #  - name: Deploy macOS Development
  #    run: steamcmd +login ${{ secrets.STEAM_USERNAME }} +run_app_build ${{ github.workspace }}/Steam/MacDev.vdf +quit
  #  - name: Deploy macOS Shipping
  #    run: steamcmd +login ${{ secrets.STEAM_USERNAME }} +run_app_build ${{ github.workspace }}/Steam/MacPre.vdf +quit